[{"/usr/app/src/index.js":"1","/usr/app/src/App.js":"2","/usr/app/src/reportWebVitals.js":"3","/usr/app/src/serviceWorkerRegistration.js":"4","/usr/app/src/pages/Merchant Signup/merchantSignup.js":"5","/usr/app/src/pages/Merchant Login/merchantLogin.js":"6","/usr/app/src/pages/Landing Page/landingPage.js":"7","/usr/app/src/pages/User Login/userLogin.js":"8","/usr/app/src/pages/View Products/viewProducts.js":"9","/usr/app/src/pages/User Signup/userSignup.js":"10","/usr/app/src/components/Navigation/navigation.js":"11","/usr/app/src/components/ProductsMenu/productsMenu.js":"12","/usr/app/src/components/ProductIcon/productIcon.js":"13","/usr/app/src/components/Footer/footer.js":"14","/usr/app/src/components/Search/search.js":"15","/usr/app/src/axios.js":"16","/usr/app/src/constants.js":"17","/usr/app/src/utils/utils.js":"18"},{"size":816,"mtime":1609637687969,"results":"19","hashOfConfig":"20"},{"size":1011,"mtime":1610109260440,"results":"21","hashOfConfig":"20"},{"size":364,"mtime":1609637687969,"results":"22","hashOfConfig":"20"},{"size":5064,"mtime":1609637687969,"results":"23","hashOfConfig":"20"},{"size":6567,"mtime":1610129703243,"results":"24","hashOfConfig":"20"},{"size":1650,"mtime":1610108762083,"results":"25","hashOfConfig":"20"},{"size":6537,"mtime":1610108762083,"results":"26","hashOfConfig":"20"},{"size":1580,"mtime":1610108762083,"results":"27","hashOfConfig":"20"},{"size":1461,"mtime":1610108762083,"results":"28","hashOfConfig":"20"},{"size":2921,"mtime":1610108762083,"results":"29","hashOfConfig":"20"},{"size":3039,"mtime":1610109260156,"results":"30","hashOfConfig":"20"},{"size":591,"mtime":1610108762079,"results":"31","hashOfConfig":"20"},{"size":454,"mtime":1610108762079,"results":"32","hashOfConfig":"20"},{"size":3297,"mtime":1610108762079,"results":"33","hashOfConfig":"20"},{"size":791,"mtime":1610108762079,"results":"34","hashOfConfig":"20"},{"size":565,"mtime":1610129702979,"results":"35","hashOfConfig":"20"},{"size":87,"mtime":1610113123160,"results":"36","hashOfConfig":"20"},{"size":491,"mtime":1610125822101,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"12g7pa1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/usr/app/src/index.js",[],["77","78"],"/usr/app/src/App.js",[],"/usr/app/src/reportWebVitals.js",[],"/usr/app/src/serviceWorkerRegistration.js",[],"/usr/app/src/pages/Merchant Signup/merchantSignup.js",["79","80"],"import React, { useState, useEffect } from 'react';\nimport { AltNavigation } from '../../components/Navigation/navigation';\nimport PlusSign from '../../assets/plus.svg';\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer/footer';\nimport './merchantSignup.css';\n\nimport { jumga } from \"../../axios\";\nimport utils from \"../../utils/utils\";\n\nfunction MerchantSignup() {\n    const [ country, setCountry ] = useState(\"\");\n    const [ banks, setBanks ] = useState([]);\n    const [ bank, setBank ] = useState(\"\");\n    const [ form, updateForm ] = useState({\n        \"account_number\": \"\",\n        \"business_name\": \"\",\n        \"address\": \"\",\n        \"business_mobile\": \"\",\n        \"business_email\": \"\",\n        \"business_contact\": \"\",\n        \"password\": \"\",\n        \"confirm_password\": \"\",\n    });\n\n    const handleCountrySelection = (e) => {\n        setCountry(e.target.value);\n    };\n\n    const handleBankSelection = (e) => {\n        setBank(e.target.value);\n    }\n\n    const handleFormChange = (e) => {\n        updateForm((prev) => {\n            return {\n                ...prev,\n                [e.target.name]: e.target.value,\n            }\n        });\n    }\n\n    useEffect(() => {\n        const getBankData = async () => {\n            if (country === \"\") {\n                return;\n            }\n            const response = await jumga.get(\"/banks/\" + country);\n            if (response.status !== 200) {\n                return;\n            }\n            const data = response.data;\n            console.log(data);\n            const banks = utils.getSortedBankList(data);\n            setBanks(banks);\n        };\n\n        (async function () {\n            await getBankData(country);\n        })();\n    }, [country]);\n\n\n    const bankOptions = () => {\n        return banks.map(bank => (\n            <option value={bank.code} key={bank.code}>{ bank.name }</option>\n        ))\n    }\n\n    const submitSignUpForm = (e) => {\n        e.preventDefault();\n        const payload = {\n            ...form,\n            country: country,\n            \"account_bank\": bank,\n            \"business_contact_mobile\": form.business_mobile,\n        }\n        console.log(payload)\n        // jumga.post(\"/v1/merchant\", payload).then((res) => {\n        //     if (res.status === 201) {\n        //         // merchant successfully signed up\n        //     }\n        // }).catch((err) => {\n        //     // an error occurred\n        // });\n    }\n\n\n    return (\n        <div className=\"merchant-sign-up\">\n            <nav>\n                <AltNavigation/>\n            </nav>\n            <main>\n                <div className=\"merchant-sign-up-header\">\n                    <h3 className=\"merchant-sign-up-title\">Become a merchant</h3>\n                    <p className=\"merchant-sign-up-subtitle\">Register your store and showcase your products</p>\n                </div>\n                <form className=\"merchant-sign-up-form\">\n                    <div className=\"form-details\">\n                        <div className=\"business-details\">\n                            <input type=\"text\" name=\"business_contact\" className=\"form-input\" placeholder=\"Name\" onChange={handleFormChange} required/>\n                            <input type=\"text\" name=\"business_name\" className=\"form-input\" placeholder=\"Business Name\" onChange={handleFormChange} required/>\n                            <input type=\"text\" name=\"business_mobile\" className=\"form-input\" placeholder=\"Business Mobile Number\" onChange={handleFormChange} required/>\n                            <input type=\"email\" name=\"business_email\" className=\"form-input\" placeholder=\"Business Email\" onChange={handleFormChange} required/>\n                            <input type=\"text\" name=\"address\" className=\"form-input\" placeholder=\"Address\" onChange={handleFormChange} required/>\n                            <select name=\"country\" className=\"form-input-select\" value={country} onChange={handleCountrySelection}>\n                                <option value=\"\" disabled>Select Country</option>\n                                <option value=\"NG\">Nigeria</option>\n                                <option value=\"GH\">Ghana</option>\n                                <option value=\"KE\">Kenya</option>\n                            </select>\n                            <input type=\"password\" name=\"password\" className=\"form-input\" placeholder=\"Password\" onChange={handleFormChange} required/>\n                            <input type=\"password\" name=\"confirm_password\" className=\"form-input\" placeholder=\"Confirm Password\" onChange={handleFormChange} required/>\n                            <div className=\"account\">\n                                <h3 className=\"account-title\">Account Details </h3>\n                                <div className=\"account-details\">\n                                    <select name=\"bank\" className=\"form-input\" value={bank} onChange={handleBankSelection}>\n                                        <option value=\"\" disabled>Bank</option>\n                                        {bankOptions()}\n                                    </select>\n                                    <input type=\"text\" name=\"account_number\" className=\"form-input\" placeholder=\"Account Number\" onChange={handleFormChange} />\n                                </div>\n                                <p className=\"account-info\">\n                                    <span>*</span> Jumga requires a service charge of $20 to register a shop.\n                                </p>\n                            </div>\n                        </div>\n                        <input type=\"submit\" value=\"Register\" className=\"register-btn\" onClick={submitSignUpForm}/>\n\n                        <p className=\"merchant-login-link\">\n                            Already have an account? \n                            <span>\n                                <Link to=\"/admin-login\">Click here</Link>\n                            </span>\n                        </p>\n                    </div>\n                    <div className=\"business-logo\">\n                        <label htmlFor=\"business-logo\">\n                            <img src={PlusSign} className=\"business-logo-img\" alt=\"Business Logo\"/>\n                            <p>Add Business Logo</p>\n                        </label>   \n                        <input type=\"file\" id=\"business-logo\" accept=\"image/png,image/jpeg\" multiple={false}/>\n                    </div>\n                </form>\n            </main>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default MerchantSignup\n","/usr/app/src/pages/Merchant Login/merchantLogin.js",[],"/usr/app/src/pages/Landing Page/landingPage.js",[],"/usr/app/src/pages/User Login/userLogin.js",[],"/usr/app/src/pages/View Products/viewProducts.js",[],"/usr/app/src/pages/User Signup/userSignup.js",[],"/usr/app/src/components/Navigation/navigation.js",[],"/usr/app/src/components/ProductsMenu/productsMenu.js",[],"/usr/app/src/components/ProductIcon/productIcon.js",[],"/usr/app/src/components/Footer/footer.js",[],"/usr/app/src/components/Search/search.js",[],"/usr/app/src/axios.js",["81"],"import axios from \"axios\";\n\nfunction getConfig() {\n    const config = { headers: {\"Content-Type\":\"application/json\"} }\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\n        config[\"baseUrl\"] = \"http://localhost:8000\";\n    } else {\n        config[\"baseUrl\"] = \"https://apex-jumga.herokuapp.com\";\n    }\n\n    return configs\n}\n\nexport const jumga = axios.create(getConfig());\n\nexport const flutterwave = axios.create({baseURL: \"https://api.flutterwave.com/v3\", headers: {Authorization: \"FLWPUBK_TEST-5c51665ef164bbdade0aa2ba50c9e8b2-X\"}})\n","/usr/app/src/constants.js",[],"/usr/app/src/utils/utils.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":2,"message":"87","line":79,"column":9,"nodeType":"88","messageId":"89","endLine":79,"endColumn":12},{"ruleId":"90","severity":2,"message":"91","line":79,"column":9,"nodeType":"92","messageId":"93","endLine":79,"endColumn":12},{"ruleId":"90","severity":2,"message":"94","line":12,"column":12,"nodeType":"92","messageId":"93","endLine":12,"endColumn":19},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'jum' is not defined.","Identifier","undef","'configs' is not defined.","no-global-assign","no-unsafe-negation"]